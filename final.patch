diff --git a/changeroutecolors.py b/changeroutecolors.py
index 2c532be..4a66994 100755
--- a/changeroutecolors.py
+++ b/changeroutecolors.py
@@ -1,5 +1,4 @@
 #!/usr/bin/env python
-
 """
 Convert bus routes from red to many colors.
 
@@ -10,22 +9,58 @@ file to make all the routes different colors so they are visually
 distinct.
 """
 
+import random
 import xml.dom.minidom
 from xml.dom.minidom import Node
 
-doc = xml.dom.minidom.parse('doc.kml')
-# Each RTC bus route lives in a node 'Placemark'
-nodes = doc.getElementsByTagName('Placemark')
+def colorgenerator(numroutes):
+	"""Python generator to make distinct hex colors"""
+	for color in range(0, 0xffffff, 0xffffff / numroutes):
+		# The KMZ file's doc.kml file uses four digit color
+		# values. We'll leave the fourth digit the same ('fa'); the
+		# first three hex digits determine the route color.
+		newcolor =  "%06Xfa" % color
+		yield newcolor.lower()
+
+def colorgenerator2():
+	"""Nah, just a handful of random colors."""
+	colors = list()
+	colors.extend(['ff0000fa', 'ff00fffa', '8a2bb2fa', 'ffff00fa', '00fffffa', '0000fffa'])
+	for color in colors:
+		yield color
 
-mapping = dict()
-for node in nodes:
-    name = node.getElementsByTagName('name')[0]
-	# Get the route name
-    mapping[name.firstChild.nodeValue] = 'ffffffff'
+random.seed()
+# doc = xml.dom.minidom.parse('doc.kml')
+# # Each RTC bus route lives in a node 'Placemark'
+# nodes = doc.getElementsByTagName('Placemark')
 
-numroutes = len(mapping.keys()) # as of this writing, 119 routes
+# mapping = dict()
+# for node in nodes:
+#     name = node.getElementsByTagName('name')[0]
+# 	# Get the route name, give it a temporary color value
+#     mapping[name.firstChild.nodeValue] = 'ffffffff'
 
-for color in range(0, 0xffffff, 0xffffff / 119):
-    newcolor =  "#%Xfa" % color
-    print newcolor.lower()
+# numroutes = len(mapping.keys()) # as of this writing, 119 routes
+numroutes = 119
+newstyles = list()
+#doc_element = doc.getElementsByTagName('Document')[0]
+for idx, stylecolor in enumerate(colorgenerator2()):
+	#doc_element.appendChild("""
+	newstyles.append("""
+  <Style id="LineStyle%s">
+    <LabelStyle>
+      <color>00000000</color>
+      <scale>0.000000</scale>
+    </LabelStyle>
+    <LineStyle>
+      <color>%s</color>
+      <width>1.700000</width>
+    </LineStyle>
+    <PolyStyle>
+      <color>00000000</color>
+      <outline>0</outline>
+    </PolyStyle>
+  </Style>""" % (idx, stylecolor))
 
+#print doc.toxml()
+for style in newstyles: print style
